quarkus.used.version=${quarkus.platform.version}

quarkus.live-reload.instrumentation=true

###### DB config      (comment datasource config for using the dev service)

#quarkus.datasource.devservices.enabled=false

%dev.quarkus.datasource.db-kind=mysql
%dev.quarkus.datasource.db-version=5.5.0
%dev.quarkus.datasource.username=quarkus
%dev.quarkus.datasource.password=quarkus
#%dev.quarkus.datasource.username=${sm//projects/103430113563/secrets/db-user-local}
#%dev.quarkus.datasource.password=${sm//projects/103430113563/secrets/db-password-local}
%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/quarkus_test
# drop-and-create, update or validate
%dev.quarkus.hibernate-orm.database.generation=drop-and-create


%prod.quarkus.datasource.db-kind=mysql
# To make the GCP Secret work:
#   -- For local usage  you need to store the Default Credentials for your environment. Use:  gcloud auth application-default login
#   -- Make sure you set the Role "Secret Manager Secret Accessor" in the GCP IAM configuration for the used principle:  <nr>-compute@developer.gserviceaccount.com
%prod.quarkus.datasource.username=${sm//projects/103430113563/secrets/db-user-hello-app}
%prod.quarkus.datasource.password=${sm//projects/103430113563/secrets/db-password-hello-app}
%prod.quarkus.datasource.jdbc.url=jdbc:mysql:///quarkus_test
%prod.quarkus.datasource.jdbc.additional-jdbc-properties.cloudSqlInstance=hello-quarkus-kotlin-gcp:europe-west1:hello-quarkus-kotlin-gcp-db
%prod.quarkus.datasource.jdbc.additional-jdbc-properties.socketFactory=com.google.cloud.sql.mysql.SocketFactory
# drop-and-create, update or validate
%prod.quarkus.hibernate-orm.database.generation=validate

